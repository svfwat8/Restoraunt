@model List<Restoraunt.Models.OrderViewModel>
@using Restoraunt.Domain.Enums.Order

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.Title = "Заказы";
    var recentOrders = Model; // для совместимости с новым стилем
}

<div id="content">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 text-gray-800">Список заказов</h1>
    </div>

    <div class="card shadow-sm mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 fw-bold text-primary">Последние заказы</h6>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>#</th>
                            <th>Дата</th>
                            <th>Сумма</th>
                            <th>Статус</th>
                            <th>Товары</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (recentOrders != null && recentOrders.Any())
                        {
                            foreach (var order in recentOrders)
                            {
                                var badge = order.State == UState.Done ? "bg-success" :
                                            order.State == UState.Waiting ? "bg-warning text-dark" :
                                            "bg-danger";
                                var status = order.State == UState.Done ? "Завершён" :
                                             order.State == UState.Waiting ? "В ожидании" :
                                             "Отменён";
                                <tr>
                                    <td>@order.Id</td>
                                    <td>@order.Created.ToString("yyyy-MM-dd")</td>
                                    <td>₽@order.Total</td>
                                    <td><span class="badge @badge">@status</span></td>
                                    <td>@string.Join(", ", order.Products.Select(p => p.Title))</td>
                                    <td>
                                        <a href="@Url.Action("OrderDetails", "Admin", new { id = order.Id })" class="btn btn-sm btn-outline-secondary">Просмотр</a>
                                        <a href="@Url.Action("ChangeOrderState", "Admin", new { id = order.Id })" class="btn btn-sm btn-outline-warning">Изменить статус</a>
                                        <a href="@Url.Action("DeleteOrder", "Admin", new { id = order.Id })" class="btn btn-sm btn-outline-danger" onclick="return confirm('Вы уверены, что хотите удалить этот заказ?');">Удалить</a>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="6" class="text-center">Нет заказов</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<style>
    .hover-shadow:hover {
        box-shadow: 0 0.5rem 1rem rgba(0,0,0,.15);
        cursor: pointer;
    }

    .card-icon {
        font-size: 2.5rem;
    }
</style>
